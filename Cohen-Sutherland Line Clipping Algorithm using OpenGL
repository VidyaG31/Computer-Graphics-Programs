#include <GL/glut.h>
#include <iostream>

using namespace std;

// Clipping window boundaries
const int LEFT = 1, RIGHT = 2, BOTTOM = 4, TOP = 8;
double x_min = 150, y_min = 150, x_max = 350, y_max = 350;
double x1, y1, x2, y2;
bool isFirstClick = true, showClippedLine = false, drawLine = false;

// Compute region code for Cohen-Sutherland Algorithm
int computeCode(double x, double y) {
    int code = 0;
    if (x < x_min) code |= LEFT;
    if (x > x_max) code |= RIGHT;
    if (y < y_min) code |= BOTTOM;
    if (y > y_max) code |= TOP;
    return code;
}

// Cohen-Sutherland Line Clipping Algorithm
void cohenSutherlandClip() {
    int code1 = computeCode(x1, y1);
    int code2 = computeCode(x2, y2);
    bool accept = false;

    while (true) {
        if (!(code1 | code2)) {  // Both endpoints inside
            accept = true;
            break;
        } else if (code1 & code2) {  // Both endpoints outside (same region)
            drawLine = false;  // Remove the line completely
            glutPostRedisplay();
            return;
        } else {
            int codeOut = code1 ? code1 : code2;
            double x, y;

            if (codeOut & TOP) {
                x = x1 + (x2 - x1) * (y_max - y1) / (y2 - y1);
                y = y_max;
            } else if (codeOut & BOTTOM) {
                x = x1 + (x2 - x1) * (y_min - y1) / (y2 - y1);
                y = y_min;
            } else if (codeOut & RIGHT) {
                y = y1 + (y2 - y1) * (x_max - x1) / (x2 - x1);
                x = x_max;
            } else if (codeOut & LEFT) {
                y = y1 + (y2 - y1) * (x_min - x1) / (x2 - x1);
                x = x_min;
            }

            if (codeOut == code1) {
                x1 = x;
                y1 = y;
                code1 = computeCode(x1, y1);
            } else {
                x2 = x;
                y2 = y;
                code2 = computeCode(x2, y2);
            }
        }
    }

    showClippedLine = true;
    drawLine = true;
    glutPostRedisplay();
}

// Mouse Click Handler
void mouseClick(int button, int state, int mx, int my) {
    if (button == GLUT_LEFT_BUTTON && state == GLUT_DOWN) {
        if (isFirstClick) {
            x1 = mx;
            y1 = 500 - my;  // Flip y-coordinates
            isFirstClick = false;
        } else {
            x2 = mx;
            y2 = 500 - my;  // Flip y-coordinates
            isFirstClick = true;
            showClippedLine = false;
            drawLine = true;
            glutPostRedisplay();
        }
    } else if (button == GLUT_RIGHT_BUTTON && state == GLUT_DOWN) {
        cohenSutherlandClip();
    }
}

// Draw the 9 regions (inside + 8 outside regions)
void drawRegions() {
    glLineWidth(1.5);

    // Draw vertical dividers
    glColor3f(0.5, 0.5, 0.5);
    glBegin(GL_LINES);
    glVertex2i(x_min, 0);
    glVertex2i(x_min, 500);
    glVertex2i(x_max, 0);
    glVertex2i(x_max, 500);
    glEnd();

    // Draw horizontal dividers
    glBegin(GL_LINES);
    glVertex2i(0, y_min);
    glVertex2i(500, y_min);
    glVertex2i(0, y_max);
    glVertex2i(500, y_max);
    glEnd();
}

// Display function
void display() {
    glClear(GL_COLOR_BUFFER_BIT);

    // Draw the 8 regions
    drawRegions();

    // Draw Clipping Window
    glColor3f(1.0, 1.0, 1.0);
    glBegin(GL_LINE_LOOP);
    glVertex2i(x_min, y_min);
    glVertex2i(x_max, y_min);
    glVertex2i(x_max, y_max);
    glVertex2i(x_min, y_max);
    glEnd();

    // Draw Line only if it's valid
    if (drawLine) {
        glColor3f(1.0, 0.0, 0.0);
        glBegin(GL_LINES);
        glVertex2i(x1, y1);
        glVertex2i(x2, y2);
        glEnd();
    }

    // Draw Clipped Line (if applicable)
    if (showClippedLine) {
        glColor3f(0.0, 1.0, 0.0);
        glBegin(GL_LINES);
        glVertex2i(x1, y1);
        glVertex2i(x2, y2);
        glEnd();
    }

    glFlush();
}

// Initialization
void init() {
    glClearColor(0, 0, 0, 1);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(0, 500, 0, 500);
}

// Main Function
int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(500, 500);
    glutCreateWindow("Cohen-Sutherland Line Clipping with 8 Regions");

    init();
    glutDisplayFunc(display);
    glutMouseFunc(mouseClick);
    glutMainLoop();
    return 0;
}
